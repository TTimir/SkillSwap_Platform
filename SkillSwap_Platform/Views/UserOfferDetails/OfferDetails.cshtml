@using System.Security.Claims
@using System.Linq
@inject SkillSwap_Platform.Services.Wishlist.IWishlistService WishlistService
@inject IHttpContextAccessor HttpContextAccessor
@model SkillSwap_Platform.Models.ViewModels.OfferDisplayVM

@{
    ViewData["Title"] = "Swap Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var reviews = ((IEnumerable<SkillSwap_Platform.Models.TblReview>)Model.Reviews) ?? new List<SkillSwap_Platform.Models.TblReview>();
    int totalReviews = reviews.Count();
    double averageRating = totalReviews > 0 ? reviews.Average(r => r.Rating) : 0;

    int fiveStarCount = totalReviews > 0 ? reviews.Count(r => r.Rating == 5) : 0;
    int fourStarCount = totalReviews > 0 ? reviews.Count(r => r.Rating == 4) : 0;
    int threeStarCount = totalReviews > 0 ? reviews.Count(r => r.Rating == 3) : 0;
    int twoStarCount = totalReviews > 0 ? reviews.Count(r => r.Rating == 2) : 0;
    int oneStarCount = totalReviews > 0 ? reviews.Count(r => r.Rating == 1) : 0;

    int fiveStarPercent = totalReviews > 0 ? (fiveStarCount * 100) / totalReviews : 0;
    int fourStarPercent = totalReviews > 0 ? (fourStarCount * 100) / totalReviews : 0;
    int threeStarPercent = totalReviews > 0 ? (threeStarCount * 100) / totalReviews : 0;
    int twoStarPercent = totalReviews > 0 ? (twoStarCount * 100) / totalReviews : 0;
    int oneStarPercent = totalReviews > 0 ? (oneStarCount * 100) / totalReviews : 0;

    string reviewStatus =
    averageRating >= 4.5 ? "Exceptional" :
    averageRating >= 4.0 ? "Very Good" :
    averageRating >= 3.0 ? "Good" : "Average";

    var reviewList = reviews.ToList();
    int reviewCount = reviewList.Count;

    var userIdString = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    int userId = 0;
    if (int.TryParse(userIdString, out var tmp)) userId = tmp;

    // pull the offer-owner’s ID out of your UserDetails VM
    var ownerId = Model.UserDetails?.FirstOrDefault()?.UserId ?? 0;
    bool isOwnerView = userId > 0 && userId == ownerId;

    // check if already in wishlist
    bool isSaved = userId > 0
        && await WishlistService.ExistsAsync(userId, Model.OfferId);
}


<style>
    .offer-card {
        display: flex;
        flex-direction: column;
    }

        .offer-card .list-content {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .offer-card .list-title {
            min-height: 48px; /* Ensure consistent spacing for title */
            line-height: 1.3;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }

        .offer-card .budget {
            text-align: right;
        }

    .row.equal-height {
        display: flex;
        flex-wrap: wrap;
    }

        /* Make each column a flex container */
        .row.equal-height > [class*="col-"] {
            display: flex;
            flex-direction: column;
        }

    .share-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
        display: none; /* Hidden by default */
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .share-modal {
        background: #fff;
        padding: 25px;
        border-radius: 8px;
        position: relative;
        width: 90%;
        max-width: 400px;
        box-shadow: 0px 10px 15px rgba(0, 0, 0, 0.1);
    }

    .close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: transparent;
        border: none;
        font-size: 24px;
        cursor: pointer;
    }

    .share-modal h3 {
        margin-top: 0;
        margin-bottom: 15px;
        font-size: 20px;
        text-align: center;
    }

    .share-content {
        display: flex;
        gap: 10px;
        margin: 20px 0;
    }

        .share-content input {
            flex: 1;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

    .review_cansel_btns a.vote {
        color: #333; /* default color */
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .review_cansel_btns a.vote:hover {
            color: #007bff; /* change this to your desired hover color */
        }

    .review_cansel_btns a.vote {
        color: #333; /* default color */
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .review_cansel_btns a.vote:hover {
            color: #007bff;
        }
</style>

<!-- Breadcumb Sections -->
<section class="breadcumb-section">
    <div class="container">
        <div class="row">
            <div class="col-sm-8 col-lg-10">
                <div class="breadcumb-style1 mb10-xs">
                    @{
                        // Build a URL‐friendly slug from your Category
                        var categorySlug = (Model.Category ?? "")
                        .Trim()
                        .Replace(" ", "-")
                        .ToLowerInvariant();
                    }
                    <div class="breadcumb-list">
                        <a asp-controller="Home" asp-action="Index">Home</a>
                        <a asp-controller="UserOfferDetails" asp-action="PublicOfferList">Swap Offers</a>

                        @* If you have a category filter page, link back to it *@
                        @if (!string.IsNullOrWhiteSpace(Model.Category))
                        {
                            <a asp-controller="UserOfferDetails"
                               asp-action="PublicOfferList"
                               asp-route-category="@categorySlug">
                                @Model.Category
                            </a>
                        }

                        @* Current page: plain text *@
                        <span>@Model.Title</span>
                    </div>
                </div>
            </div>
            <div class="col-sm-4 col-lg-2">
                <div class="d-flex align-items-center justify-content-sm-end">
                    <div id="shareBtn" class="share-save-widget d-flex align-items-center" style="cursor:pointer;">
                        <span class="icon flaticon-share dark-color fz12 mr10"></span>
                        <div class="h6 mb-0">Share</div>
                    </div>
                    @if (!isOwnerView)
                    {
                        <div class="share-save-widget d-flex align-items-center ml15">
                            <form asp-controller="UserWishlist"
                                  asp-action="@(isSaved ? "Remove" : "Add")"
                                  method="post">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="offerId" value="@Model.OfferId" />

                                <button type="submit"
                                        class="border-0 bg-transparent listing-fav fz12"
                                        data-bs-toggle="tooltip"
                                        title="@(isSaved ? "Remove from wishlist" : "Add to wishlist")">
                                    <span class="icon dark-color fz12 mr10 @(isSaved
                                    ? "fas fa-heart text-danger"
                                    : "far fa-heart")"></span>
                                </button>
                            </form>
                        </div>
                        @if (!Model.IsFlagged)
                        {
                            <div data-bs-toggle="tooltip"
                                 data-bs-placement="top"
                                 title="Report this swap offer">
                                <div id="flagBtn" class="share-save-widget d-flex align-items-center" style="cursor:pointer;"
                                     data-bs-toggle="modal" data-bs-target="#flagModal">
                                    <span class="icon flaticon-flag dark-color fz12 mr10"></span>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div data-bs-toggle="tooltip"
                                 data-bs-placement="top"
                                 title="You’ve already reported this swap offer">
                                <div id="flagBtn" class="share-save-widget d-flex align-items-center">
                                    <span class="icon flaticon-flag dark-color fz12 mr10 text-danger"></span>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Flag Modal -->
<div class="modal fade" id="flagModal" tabindex="-1" aria-labelledby="flagModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form asp-controller="UserOfferDetails" asp-action="Flag" method="post" class="form-style3">
            @Html.AntiForgeryToken()
            <input type="hidden" name="offerId" value="@Model.OfferId" />

            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="flagModalLabel">Report Swap Offer</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="reason" class="form-label">Reason for reporting</label>
                        <textarea id="reason" name="reason" rows="2" placeholder="Please explain the issue with this swap offer…" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="ud-btn btn-light-thm mb25 me-4" data-bs-dismiss="modal" style="border:0;">Cancel</button>
                    <button type="submit" class="ud-btn btn-thm mb25 me-4">Submit Report <i class="fal fa-arrow-right-long"></i></button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Share overlay markup (can be placed near the bottom of your view) -->
<div id="shareOverlay" class="share-overlay">
    <div class="share-modal">
        <button id="closeShare" class="close-btn">&times;</button>
        <h3>Share This Swap</h3>
        <div class="share-content">
            <input type="text" id="shareLink" readonly value="https://yourofferlink.com" />
            <button id="copyShare" class="ud-btn btn-thm">Copy</button>
        </div>
    </div>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <div class="col-lg-12">
        <div class="ui-content">
            <div class="message-alart-style1">
                <div class="alert alart_style_four alert-dismissible fade show mb20" role="alert">
                    @TempData["SuccessMessage"]
                    <i class="far fa-xmark btn-close" data-bs-dismiss="alert" aria-label="Close"></i>
                </div>
            </div>
        </div>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="col-lg-12">
        <div class="ui-content">
            <div class="message-alart-style1">
                <div class="alert alart_style_three alert-dismissible fade show mb20" role="alert">
                    @TempData["ErrorMessage"]
                    <i class="far fa-xmark btn-close" data-bs-dismiss="alert" aria-label="Close"></i>
                </div>
            </div>
        </div>
    </div>
}
<!-- Service Details -->
<section class="pt0 pb90 pb30-md">
    <div class="container">
        <div class="row wrap">
            <div class="col-lg-8">
                <div class="column wow fadeInUp">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="position-relative">
                                <h2>@Model.Title</h2>
                                <div class="list-meta mt30">
                                    <a class="mb5-sm" style="margin-right: 10px;" href="">
                                        <span class="position-relative mr10">
                                            @if (Model.UserDetails != null)
                                            {
                                                <!-- Profile Image -->
                                                @foreach (var user in Model.UserDetails)
                                                {
                                                    @if ((ViewData["IsOnline"] as bool?) ?? false)
                                                    {
                                                        <span class="online-badge"></span>
                                                    }
                                                    <img src="@(!string.IsNullOrEmpty(user.ProfileImage) ? user.ProfileImage : "/template_assets/images/No_Profile_img.png")" alt="Profile Photo" class="rounded-circle" width="80" height="80" style="max-width:100%;" />
                                                }
                                            }
                                        </span>
                                        <span class="fz14">
                                            @if (Model.UserDetails != null)
                                            {
                                                foreach (var user in Model.UserDetails)
                                                {
                                                    <a href="@Url.Action("PublicProfileByUsername", "UserProfile", new { username = user.Username })"
                                                       target="_blank"
                                                       class="fz14">
                                                        @user.FirstName @user.LastName
                                                    </a>
                                                }
                                            }
                                        </span>
                                    </a>
                                    <p class="mb-0 dark-color fz14 list-inline-item ml25 ml15-sm mb5-sm ml0-xs"><i class="fas fa-star vam fz10 review-color me-2"></i> @averageRating.ToString("0.00") @totalReviews reviews</p>
                                    <p class="mb-0 dark-color fz14 list-inline-item ml25 ml15-sm mb5-sm ml0-xs"><i class="flaticon-file-1 vam fz20 me-2"></i> @Model.ActiveExchangeCount @((Model.ActiveExchangeCount == 1) ? "Ongoing Exchange" : "Ongoing Exchanges")</p>
                                    <p class="mb-0 dark-color fz14 list-inline-item ml25 ml15-sm mb5-sm ml0-xs"><i class="flaticon-website vam fz20 me-2"></i> @Model.Views Views</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr class="opacity-100 mb30 mt30">
                    <div class="row mt30">
                        <div class="col-sm-6 col-md-4">
                            <div class="iconbox-style1 contact-style d-flex align-items-start mb30">
                                <div class="icon flex-shrink-0"><span class="flaticon-calendar"></span></div>
                                <div class="details">
                                    <h5 class="title">Delivery Time</h5>
                                    <p class="mb-0 text">1 - @Model.TimeCommitmentDays</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4">
                            <div class="iconbox-style1 contact-style d-flex align-items-start mb30">
                                <div class="icon flex-shrink-0"><span class="flaticon-goal"></span></div>
                                <div class="details">
                                    <h5 class="title">English Level</h5>
                                    <p class="mb-0 text">
                                        @if (Model.UserLanguages != null)
                                        {
                                            foreach (var lang in Model.UserLanguages)
                                            {
                                                <span>@lang.Proficiency</span>
                                            }
                                        }
                                        <span>Learner</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4">
                            <div class="iconbox-style1 contact-style d-flex align-items-start mb30">
                                <div class="icon flex-shrink-0"><span class="flaticon-tracking"></span></div>
                                <div class="details">
                                    <h5 class="title">Location</h5>
                                    @if (Model.UserDetails != null)
                                    {
                                        foreach (var detail in Model.UserDetails)
                                        {
                                            <p class="mb-0 text">
                                                @detail.City, @detail.Country
                                            </p>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    @{
                        // List of default images.
                        var defaultImages = new List<string>
                    {
                    Url.Content("~/template_assets/images/listings/No_Offer_img_1.jpg"),
                    Url.Content("~/template_assets/images/listings/No_Offer_img_2.jpg")
                    };

                        // Check if the model has any portfolio images.
                        // Check if PortfolioUrls is non-null and has at least one element.
                        bool hasPortfolioImages = (Model.PortfolioUrls?.Count ?? 0) > 0;

                        // Determine the thumbnail to show.
                        string thumbnailToShow = hasPortfolioImages
                        ? ((IEnumerable<string>)Model.PortfolioUrls).First()
                        : defaultImages[Model.OfferId % defaultImages.Count];
                    }


                    <!-- Main Slider -->
                    <div id="sync1" class="owl-carousel owl-theme slider-1-grid mb50">
                        @if (hasPortfolioImages)
                        {
                            foreach (var imageUrl in Model.PortfolioUrls)
                            {
                                <div class="item">
                                    <img src="@imageUrl" alt="Main Slide" class="w-100">
                                </div>
                            }
                        }
                        else
                        {
                            <div class="item">
                                <img src="@thumbnailToShow" alt="Main Slide" class="w-100">
                            </div>
                        }
                    </div>

                    <!-- Thumbnail Preview Slider -->
                    <div id="sync2" class="owl-carousel owl-theme mb20">
                        @if (hasPortfolioImages)
                        {
                            foreach (var imageUrl in Model.PortfolioUrls)
                            {
                                <div class="item">
                                    <img src="@imageUrl" alt="Thumbnail" class="w-100">
                                </div>
                            }
                        }
                        else
                        {
                            <div class="item">
                                <img src="@thumbnailToShow" alt="Thumbnail" class="w-100">
                            </div>
                        }
                    </div>
                    <div class="service-about">
                        <h4>About</h4>
                        <p class="text mb30">@Model.ScopeOfWork</p>
                        <div class="d-flex align-items-start mb50">
                            <div class="list1">
                                <h6>Skill type</h6>
                                <p class="text mb-0">
                                    @Model.Category
                                </p>
                            </div>
                            <div class="list1 ml80">
                                <h6>Skill Set</h6>
                                <p class="text mb-0">
                                    @if (Model.SkillNames != null)
                                    {
                                        @string.Join(", ", Model.SkillNames)
                                    }
                                </p>
                            </div>
                            <div class="list1 ml80">
                                <h6>Design tool</h6>
                                <p class="text mb-0">
                                    @if (!string.IsNullOrWhiteSpace(Model.Tools))
                                    {
                                        @Model.Tools
                                    }
                                </p>
                            </div>
                            <div class="list1 ml80">
                                <h6>Device</h6>
                                <p class="text">
                                    @if (!string.IsNullOrWhiteSpace(Model.Device))
                                    {
                                        @Model.Device
                                    }
                                </p>
                            </div>
                        </div>
                        <hr class="opacity-100 mb60">
                        <h4>Compare Swaps</h4>
                        @if (Model.CompareOffers == null)
                        {
                            <p class="text-muted">No comparison swaps available at the moment.</p>
                        }
                        else
                        {
                            <div class="table-style2 table-responsive bdr1 mt30 mb60">
                                <table class="table table-borderless mb-0">
                                    <thead class="t-head">
                                        <tr>
                                            <th class="col" scope="col"></th>
                                            <th class="col" scope="col">
                                                <div class="profile-info d-flex align-items-center">
                                                    @if (Model.UserDetails != null)
                                                    {
                                                        @foreach (var user in Model.UserDetails)
                                                        {
                                                            <div class="profile-info d-flex align-items-center">
                                                                <img src="@(!string.IsNullOrEmpty(user.ProfileImage) ? user.ProfileImage : "/template_assets/images/No_Profile_img.png")"
                                                                     alt="User Photo" class="rounded-circle" width="40">
                                                                <span class="h5 ml-2 mt15" style="margin-left: 10px;">
                                                                    <a href="@Url.Action("Index", "UserProfile", new { userId = user.UserId })" target="_blank">
                                                                        @user.Username
                                                                    </a>
                                                                </span>
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                                <span class="h4">@Model.TokenCost Token </span><br>
                                                <span class="h4">@Model.ShortTitle</span><br>
                                                <span class="text">Current Swap Description</span>
                                            </th>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                if (compareOffer.OfferId != Model.OfferId) // Filter out the current offer
                                                {
                                                    <th class="col" scope="col">
                                                        <div class="profile-info d-flex align-items-center">
                                                            <div class="profile-info d-flex align-items-center">
                                                                <img src="@(!string.IsNullOrEmpty(compareOffer.ProfileImage) ? compareOffer.ProfileImage : "/template_assets/images/No_Profile_img.png")"
                                                                     alt="User Photo" class="rounded-circle" width="40">
                                                                <span class="h5 ml-2 mt15" style="margin-left: 10px;">
                                                                    <a href="@Url.Action("Index", "UserProfile", new { userId = compareOffer.UserId })" target="_blank">
                                                                        @compareOffer.Username
                                                                    </a>
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <span class="h4">@compareOffer.TokenCost Token  </span><br>
                                                        <span class="h4">@compareOffer.ShortTitle</span><br>
                                                        <span class="text">@compareOffer.Category</span>
                                                    </th>
                                                }
                                            }
                                        </tr>
                                    </thead>
                                    <tbody class="t-body">
                                        <tr class="bgc-thm3">
                                            <th scope="row">Intrested in</th>
                                            <td>
                                                @if (Model.WillingSkills != null)
                                                {
                                                    foreach (var skill in Model.WillingSkills)
                                                    {
                                                        <a class="">@skill</a>
                                                    }
                                                }
                                            </td>
                                            @if (Model.CompareOffers != null)
                                            {
                                                foreach (var compareSkill in Model.CompareOffers)
                                                {
                                                    <td>
                                                        @if (compareSkill.CompareWillingSkills != null)
                                                        {
                                                            @foreach (var skill in compareSkill.CompareWillingSkills)
                                                            {
                                                                <a class="">@skill</a>
                                                            }
                                                        }
                                                    </td>
                                                }
                                            }
                                        </tr>
                                        @* <tr class="bgc-thm3">
                                        <th scope="row">Source file</th>
                                        <td><a class="check_circle bgc-thm" href="#"><span class="fas fa-check"></span></a></td>
                                        <td><a class="check_circle bgc-thm" href="#"><span class="fas fa-check"></span></a></td>
                                        <td><a class="check_circle bgc-thm" href="#"><span class="fas fa-check"></span></a></td>
                                    </tr> *@
                                        <tr>
                                            <th scope="row">Time Commitment (Days)</th>
                                            <td>@Model.TimeCommitmentDays Days</td>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                <td>@compareOffer.TimeCommitmentDays Days</td>
                                            }
                                        </tr>
                                        <tr class="bgc-thm3">
                                            <th scope="row">Assistance</th>
                                            <td>@Model.AssistanceRounds</td>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                <td>@compareOffer.AssistanceRounds</td>
                                            }
                                        </tr>
                                        <tr>
                                            <th scope="row">Recommendation</th>
                                            <td>@("%")@Model.RecommendedPercentage.ToString("F2")</td>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                <td>@("%")@compareOffer.RecommendedPercentage.ToString("F2")</td>
                                            }
                                        </tr>
                                        <tr class="bgc-thm3">
                                            <th scope="row">Exch. Success</th>
                                            <td>@("%")@Model.JobSuccessRate.ToString("F2")</td>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                <td>@("%")@compareOffer.JobSuccessRate.ToString("F2")</td>
                                            }
                                        </tr>
                                        <tr>
                                            <th scope="row">Availability</th>
                                            <td>@Model.FreelanceType</td>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                <td>@compareOffer.FreelanceType</td>
                                            }
                                        </tr>
                                        <tr class="bgc-thm3">
                                            <th scope="row">Collaboration Mode</th>
                                            <td>@Model.CollaborationMethod</td>
                                            @foreach (var compareOffer in Model.CompareOffers)
                                            {
                                                <td>@compareOffer.CollaborationMethod</td>
                                            }
                                        </tr>
                                        <tr>
                                            <th scope="row"></th>
                                            @if (!isOwnerView)
                                            {
                                                <td><a href="@Url.Action("Conversation", "Messaging", new { offerId = Model.OfferId, otherUserId = Model.OfferOwnerId })" class="ud-btn btn-thm">Message<i class="fal fa-arrow-right-long"></i></a></td>
                                                @foreach (var compareOffer in Model.CompareOffers)
                                                {
                                                    <td><a href="@Url.Action("OfferDetails", "UserOfferDetails", new { offerId = compareOffer.OfferId })" class="ud-btn btn-thm">Select<i class="fal fa-arrow-right-long"></i></a></td>
                                                }
                                            }
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        }
                        <hr class="opacity-100 mb60">
                        <h4>Frequently Asked Questions</h4>
                        <div class="accordion-style1 faq-page mb-4 mb-lg-5 mt30">
                            <div class="accordion" id="accordionExample">
                                @if (Model.Faqs == null || Model.Faqs.Count == 0)
                                {
                                    <p class="text-muted">No FAQs have been added for this swap yet.</p>
                                }
                                else
                                {
                                    @for (int i = 0; i < Model.Faqs.Count; i++)
                                    {
                                        var faq = Model.Faqs[i];
                                        var headingId = $"faqHeading{i}";
                                        var collapseId = $"faqCollapse{i}";
                                        <div class="accordion-item active">
                                            <h2 class="accordion-header" id="headingOne">
                                                <button class="accordion-button @((i>0? "collapsed":""))" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="@(i==0? "true":"false")" aria-controls="@collapseId">@faq.Question</button>
                                            </h2>
                                            <div id="@collapseId" class="accordion-collapse collapse @((i==0? "show":""))" aria-labelledby="@headingId" data-bs-parent="#offerFaqAccordion">
                                                <div class="accordion-body">@faq.Answer</div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <hr class="opacity-100 mb15">
                        <div class="product_single_content mb50">
                            <div class="mbp_pagination_comments">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="total_review mb30 mt45">
                                            <h4>@totalReviews Reviews</h4>
                                        </div>
                                        <div class="d-md-flex align-items-center mb30">
                                            <div class="total-review-box d-flex align-items-center text-center mb30-sm">
                                                <div class="wrapper mx-auto">
                                                    <div class="t-review mb15">@averageRating.ToString("0.00")</div>
                                                    <h5>@reviewStatus</h5>
                                                    <p class="text mb-0">@totalReviews reviews</p>
                                                </div>
                                            </div>
                                            <div class="wrapper ml60 ml0-sm">
                                                <div class="review-list d-flex align-items-center mb10">
                                                    <div class="list-number">5 Star</div>
                                                    <div class="progress">
                                                        <div class="progress-bar" style="width: @fiveStarPercent%;" role="progressbar" aria-valuenow="@fiveStarPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <div class="value text-end">@fiveStarCount</div>
                                                </div>
                                                <div class="review-list d-flex align-items-center mb10">
                                                    <div class="list-number">4 Star</div>
                                                    <div class="progress">
                                                        <div class="progress-bar" style="width: @fourStarPercent%;" role="progressbar" aria-valuenow="@fourStarPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <div class="value text-end">@fourStarCount</div>
                                                </div>
                                                <div class="review-list d-flex align-items-center mb10">
                                                    <div class="list-number">3 Star</div>
                                                    <div class="progress">
                                                        <div class="progress-bar" style="width: @threeStarPercent%;" role="progressbar" aria-valuenow="@threeStarPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <div class="value text-end">@threeStarCount</div>
                                                </div>
                                                <div class="review-list d-flex align-items-center mb10">
                                                    <div class="list-number">2 Star</div>
                                                    <div class="progress">
                                                        <div class="progress-bar" style="width: @twoStarPercent%;" role="progressbar" aria-valuenow="@twoStarPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <div class="value text-end">@twoStarCount</div>
                                                </div>
                                                <div class="review-list d-flex align-items-center mb10">
                                                    <div class="list-number">1 Star</div>
                                                    <div class="progress">
                                                        <div class="progress-bar" style="width: @oneStarCount%;" role="progressbar" aria-valuenow="@oneStarCount" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <div class="value text-end">@oneStarCount</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @if (Model.Reviews != null && Model.Reviews.Any())
                                    {
                                        <div id="reviews-container">
                                            @for (int i = 0; i < reviewCount; i++)
                                            {
                                                // Show only the first two reviews initially; hide the rest.
                                                var displayStyle = i < 2 ? "" : "display:none;";
                                                var review = reviewList[i];
                                                <div class="col-md-12 mt20 review-item" data-review-id="@review.ReviewId" style="@displayStyle">
                                                    @if (review.IsDeleted)
                                                    {
                                                        <div class="mbp_first position-relative d-flex align-items-center justify-content-start mb30-sm">
                                                            <div class="alert alert-warning mb-4 p-3">
                                                                <strong>This review has been hidden by our moderation team</strong>
                                                                <h6 class="mt-0 mb-0">
                                                                    It was found to be in violation of our Community Guidelines:
                                                                    <em>@review.DeletionReason</em>
                                                                </h6>
                                                                <small class="text-muted">
                                                                    Please keep discussions respectful and on-topic.
                                                                    <a href="/help/community-guidelines" target="_blank">Read the full guidelines</a>.
                                                                </small>
                                                                <div>
                                                                    <span class="fz14">
                                                                        <small class="text-muted">
                                                                            on @review.DeletedAt?.ToLocalTime().ToString("dd MMM, yyyy")
                                                                        </small>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="mbp_first position-relative d-flex align-items-center justify-content-start mb30-sm">
                                                            <img src="@(
                                                            !string.IsNullOrEmpty(review.Reviewer?.ProfileImageUrl)
                                                            ? review.Reviewer.ProfileImageUrl
                                                            : "~/template_assets/images/No_Profile_img.png"
                                                        )" class="mr-3" alt="Reviewer Photo" style="max-width:100%; width: 7%; border-radius: 100%" />
                                                            <div class="ml20">
                                                                <h6 class="mt-0 mb-0">@review.ReviewerName</h6>
                                                                <div><span class="fz14">@review.CreatedDate.ToLocalTime().ToString("dd MMM yyyy")</span></div>
                                                            </div>
                                                        </div>
                                                        <!-- Star Rating Display -->
                                                        <div class="star-rating-display mt10">
                                                            @for (int j = 1; j <= 5; j++)
                                                            {
                                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                                                                     style="width:16px; height:16px; fill:@(j <= review.Rating ? "gold" : "#cccccc"); transition: fill 0.3s;">
                                                                    <path d="M12 .587l3.668 7.431 8.2 1.193-5.934 5.786
                                                                1.404 8.186L12 18.896l-7.338 3.887
                                                                1.404-8.186L.132 9.211l8.2-1.193z" />
                                                                </svg>
                                                            }
                                                        </div>
                                                        <p class="text mt20 mb20">@review.Comments</p>
                                                        <div class="review_cansel_btns d-flex">
                                                            <a href="#" class="vote" data-vote="helpful"><i class="fas fa-thumbs-up"></i>Helpful <span class="vote-count helpful-count">( <span>@review.HelpfulCount</span> )</span></a>
                                                            <a href="#" class="vote" data-vote="not_helpful"><i class="fas fa-thumbs-down"></i>Not helpful <span class="vote-count not-helpful-count">( <span>@review.NotHelpfulCount</span> )</span></a>
                                                        </div>
                                                    }
                                                    @if (review.TblReviewReplies?.Any() == true)
                                                    {
                                                        <div class="replies ps-4 mb-3 mt20">
                                                            @foreach (var reply in review.TblReviewReplies.OrderBy(r => r.CreatedDate))
                                                            {
                                                                // Safely resolve current user ID once
                                                                int currentUserId = 0;
                                                                if (User?.Identity?.IsAuthenticated == true)
                                                                {
                                                                    var idClaim = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
                                                                    if (idClaim != null)
                                                                    {
                                                                        int.TryParse(idClaim.Value, out currentUserId);
                                                                    }
                                                                }
                                                                <div class="reply-item mb-2">
                                                                    <div class="d-flex align-items-center">
                                                                        <strong>@reply.ReplierUser.UserName</strong>
                                                                        <small class="text-muted ms-2 me-5">
                                                                            @reply.CreatedDate.ToLocalTime().ToString("MMM d, yyyy")
                                                                        </small>
                                                                        @if (!reply.IsFlagged && reply.ReplierUserId != currentUserId)
                                                                        {
                                                                            <form asp-action="FlagReply" asp-controller="UserReview" method="post" class="m-0 p-0">
                                                                                <input type="hidden" name="replyId" value="@reply.ReplyId" />
                                                                                <button type="submit"
                                                                                        data-bs-toggle="tooltip"
                                                                                        data-bs-placement="right"
                                                                                        title="Report this reply answer"
                                                                                        class="btn btn-link p-0 text-muted">
                                                                                    <span class="flaticon-flag"></span>
                                                                                </button>
                                                                            </form>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="text-danger" data-bs-toggle="tooltip"
                                                                                  data-bs-placement="right" title="You’ve already reported this reply answer">
                                                                                <span class="flaticon-flag"></span>
                                                                            </span>
                                                                        }
                                                                    </div>
                                                                    <p class="mb-1">@reply.Comments</p>
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    }
                                    @if (reviewCount > 2)
                                    {
                                        <div class="col-md-12 mt30">
                                            <div class="position-relative bdrb1 pb50">
                                                <a href="javascript:void(0);" class="ud-btn btn-light-thm" id="see-more-btn">
                                                    See More <i class="fal fa-arrow-right-long"></i>
                                                </a>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="bsp_reveiw_wrt">
                            <h6 class="fz17">Add a Review</h6>
                            @{
                                var typedModel = (SkillSwap_Platform.Models.ViewModels.OfferDisplayVM)Model;
                            }
                            @if (typedModel.IsExchangeCompleted)
                            {
                                <p class="text">Your email address will not be published. Required fields are marked *</p>
                                <form method="post" action="@Url.Action("Review", "ExchangeReview")">
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("ExchangeId", typedModel.Review.ExchangeId)
                                    @Html.Hidden("OfferId", typedModel.Review.OfferId)
                                    @Html.Hidden("Rating", typedModel.Review.Rating, new { id = "Rating" })

                                    <div class="form-group">
                                        <label>Your rating of this exchange <span class="text-danger">*</span></label>
                                        <br />
                                        <div class="star-rating" style="display: inline-flex; gap: 0.5rem; cursor:pointer; margin-top: 0.5rem;">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                                                     data-value="@i"
                                                     class="@(i <= typedModel.Review.Rating ? "selected" : "")"
                                                     style="width:24px; height:24px; fill:#cccccc; transition: fill 0.3s;">
                                                    <path d="M12 .587l3.668 7.431 8.2 1.193-5.934 5.786
                                                        1.404 8.186L12 18.896l-7.338 3.887
                                                        1.404-8.186L.132 9.211l8.2-1.193z" />
                                                </svg>
                                            }
                                        </div>
                                        <span>@Html.ValidationMessage("Review.Rating", "", new { @class = "text-danger" })</span>
                                    </div>
                                    <div class="row mt20">
                                        <div class="col-md-12">
                                            <div class="mb-4">
                                                <label class="fw500 fz16 ff-heading dark-color mb-2">Comment<span class="text-danger">*</span></label>
                                                <textarea name="Comments" class="pt15" rows="6" placeholder="Write your review here..."></textarea>
                                                <span>@Html.ValidationMessage("Review.Comments", "", new { @class = "text-danger" })</span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb20">
                                                <label class="fw500 ff-heading dark-color mb-2">Name<span class="text-danger">*</span></label>
                                                <input name="ReviewerName" type="text" class="form-control" placeholder="Jhon doe">
                                                <span>@Html.ValidationMessage("Review.ReviewerName", "", new { @class = "text-danger" })</span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb20">
                                                <label class="fw500 ff-heading dark-color mb-2">Email<span class="text-danger">*</span></label>
                                                <input name="ReviewerEmail" type="email" class="form-control" placeholder="creativejhondoe088">
                                                <span>@Html.ValidationMessage("Review.ReviewerEmail", "", new { @class = "text-danger" })</span>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="checkbox-style1 d-block d-sm-flex align-items-center justify-content-between mb20">
                                                <label class="custom_checkbox fz15 ff-heading">
                                                    Save my name and email in this browser for the next time I comment.
                                                    @Html.CheckBoxFor(model => typedModel.Review.RememberMe)
                                                    <span class="checkmark"></span>
                                                </label>
                                            </div>
                                            <button type="submit" class="ud-btn btn-thm">Send <i class="fal fa-arrow-right-long"></i></button>
                                        </div>
                                    </div>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-warning mt20">
                                    Thanks for being a valued member! You can leave your review once you've completed your exchange.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="column">
                    <div class="blog-sidebar ms-lg-auto">
                        <div class="price-widget">
                            <div class="navtab-style1">
                                <nav>
                                    <div class="nav nav-tabs mb20" id="nav-tab2p" role="tablist">
                                        <button class="nav-link active fw500" id="nav-item2p-tab" data-bs-toggle="tab" data-bs-target="#nav-item2p" type="button" role="tab" aria-controls="nav-item2p" aria-selected="false">Standard information</button>
                                    </div>
                                </nav>
                                <div class="tab-content" id="nav-tabContent">

                                    <div class="tab-pane fade show active" id="nav-item2p" role="tabpanel" aria-labelledby="nav-item2p-tab">
                                        <div class="price-content">
                                            <div class="price"><span class="flaticon-income"></span> @Model.TokenCost Tokens</div>
                                            <p class="text fz14">Required Skill Level <b>@Model.RequiredSkillLevel</b></p>
                                            <hr class="opacity-100 mb20">
                                            <ul class="p-0 mb15 d-sm-flex align-items-center">
                                                <li class="fz14 fw500 dark-color"><i class="flaticon-sandclock fz20 text-thm2 me-2 vam"></i>@Model.TimeCommitmentDays Days of Learning</li>
                                                <li class="fz14 fw500 dark-color ml20 ml0-xs"><i class="flaticon-recycle fz20 text-thm2 me-2 vam"></i>@Model.AssistanceRounds Assistance</li>
                                            </ul>
                                            <div class="list-style1">
                                                <ul class="">
                                                    <li class="mb15"><i class="far fa-check text-thm3 bgc-thm3-light"></i>@Model.FreelanceType (Availability)</li>
                                                    <li><i class="far fa-check text-thm3 bgc-thm3-light"></i>@Model.CollaborationMethod (Mode)</li>
                                                </ul>
                                            </div>
                                            <hr class="opacity-100 mb20">
                                            <ul class="p-0 mb15 d-sm-flex align-items-center">
                                                <li class="fz14 fw500 dark-color"><i class="flaticon-sandclock fz20 text-thm2 me-2 vam"></i>Intrested in</li>
                                            </ul>
                                            <div class="tag-list mb10">
                                                @if (Model.WillingSkills != null)
                                                {
                                                    foreach (var skill in Model.WillingSkills)
                                                    {
                                                        <a class="">@skill</a>
                                                    }
                                                }
                                                else
                                                {
                                                    <a class="badge bg-secondary">No skills added</a>
                                                }
                                            </div>
                                            @if (!isOwnerView)
                                            {
                                                <div class="d-grid">
                                                    <a href="@Url.Action("Conversation", "Messaging", new { offerId = Model.OfferId})" class="ud-btn btn-thm">
                                                        Message about this Swap <i class="fal fa-arrow-right-long"></i>
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="alert alert-info">
                                                    This is a preview of your own swap—no actions are available.
                                                </div>
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="freelancer-style1 service-single mb-0">
                            <div class="wrapper d-flex align-items-center">
                                <div class="thumb position-relative mb25">
                                    @if (Model.UserDetails != null)
                                    {
                                        <!-- Profile Image -->
                                        @foreach (var user in Model.UserDetails)
                                        {
                                            @if ((ViewData["IsOnline"] as bool?) ?? false)
                                            {
                                                <span class="online"></span>
                                            }
                                            <img src="@(!string.IsNullOrEmpty(user.ProfileImage) ? user.ProfileImage : "/template_assets/images/No_Profile_img.png")" alt="Profile Photo" class="rounded-circle" width="70" height="70" style="max-width:100%;" />
                                        }
                                    }
                                </div>
                                <div class="ml10">
                                    @if (Model.UserDetails != null)
                                    {
                                        foreach (var details in Model.UserDetails)
                                        {
                                            <h5 class="title mb-1">@details.FirstName @details.LastName</h5>
                                            <p class="mb-0">@("@")@details.Username</p>
                                        }
                                    }
                                    <div class="review"><p><i class="fas fa-star fz10 review-color pr10"></i><span class="dark-color">@Model.UserRating.ToString("0.00") </span> (@Model.ReviewCount reviews)</p></div>
                                </div>
                            </div>
                            <hr class="opacity-100">
                            <div class="details">
                                <div class="fl-meta d-flex align-items-center justify-content-between">
                                    <a class="meta fw500 text-start">
                                        Location<br><span class="fz14 fw400">
                                            @if (Model.UserDetails != null)
                                            {
                                                foreach (var details in Model.UserDetails)
                                                {
                                                    @details.Country
                                                }
                                            }
                                        </span>
                                    </a>
                                    <a class="meta fw500 text-start">
                                        Recommendation<br><span class="fz14 fw400">
                                            @if (Model.RecommendedPercentage > 0)
                                            {
                                                <span>@("%")@Model.RecommendedPercentage</span>
                                            }
                                            else
                                            {
                                                <span>Promising!</span>
                                            }
                                        </span>
                                    </a>
                                    <a class="meta fw500 text-start">Exchange Success<br><span class="fz14 fw400">%@Model.JobSuccessRate.ToString("0.00")</span></a>
                                </div>
                            </div>
                            <div class="d-grid mt30">
                                <a href="@Url.Action("PublicProfileByUsername", "UserProfile", new { username = Model.UserDetails[0].Username })" class="ud-btn btn-thm-border">
                                    Contact <i class="fal fa-arrow-right-long"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Listings -->
@if (Model.RelatedOffers != null && ((IEnumerable<SkillSwap_Platform.Models.TblOffer>)Model.RelatedOffers).Any())
{
    <section class="pt30 pb90 pb30-md">
        <div class="container">
            <div class="row wow fadeInUp">
                <div class="col-lg-12">
                    @{
                        // Retrieve the current category from your model.
                        var category = Model.Category;
                        string dynamicMessage = string.Empty;

                        // Set a message based on the category.
                        switch (category)
                        {
                            case "Graphics & Design":
                                dynamicMessage = "Give your visitor a smooth experience with creative graphic design that shows your brand.";
                                break;
                            case "Digital Marketing":
                                dynamicMessage = "Give your visitor a smooth experience with smart digital marketing that gets results.";
                                break;
                            case "Writing & Translation":
                                dynamicMessage = "Give your visitor a smooth experience with clear writing and translation that speaks to everyone.";
                                break;
                            case "Video & Animation":
                                dynamicMessage = "Give your visitor a smooth experience with engaging videos and animations that tell your story.";
                                break;
                            case "Music & Audio":
                                dynamicMessage = "Give your visitor a smooth experience with quality music and audio that sets the right mood.";
                                break;
                            case "Programming & Tech":
                                dynamicMessage = "Give your visitor a smooth experience with reliable programming and tech solutions that work perfectly.";
                                break;
                            case "Business":
                                dynamicMessage = "Give your visitor a smooth experience with smart business solutions that build trust.";
                                break;
                            case "Lifestyle":
                                dynamicMessage = "Give your visitor a smooth experience with lifestyle design that inspires everyday living.";
                                break;
                            case "Trending":
                                dynamicMessage = "Give your visitor a smooth experience with fresh design ideas that catch the eye.";
                                break;
                            default:
                                dynamicMessage = "Give your visitor a smooth experience with great practices.";
                                break;
                        }
                    }
                    <div class="main-title mb35">
                        <h2>People Who Viewed This Service Also Viewed </h2>
                        <p class="text">@dynamicMessage</p>
                    </div>
                </div>
            </div>
            <div class="row wow fadeInUp equal-height">
                @foreach (var related in Model.RelatedOffers)
                {
                    <div class="col-sm-6 col-lg-3">
                        <div class="listing-style1 offer-card">
                            <div class="list-thumb">
                                @{
                                    // Explicitly cast the Portfolio property to string.
                                    var portfolioData = (string)related.Portfolio;
                                    string[] imageUrls = new string[0];

                                    if (!string.IsNullOrWhiteSpace(portfolioData))
                                    {
                                        // Clean up the JSON array string by removing the surrounding [ and ] characters.
                                        var cleanedData = portfolioData.Trim();
                                        if (cleanedData.StartsWith("["))
                                        {
                                            cleanedData = cleanedData.Substring(1);
                                        }
                                        if (cleanedData.EndsWith("]"))
                                        {
                                            cleanedData = cleanedData.Substring(0, cleanedData.Length - 1);
                                        }

                                        // Now split using comma and remove any extra surrounding quotes for each URL.
                                        imageUrls = cleanedData
                                        .Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries)
                                        .Select(url => url.Trim().Trim('"'))
                                        .ToArray();
                                    }
                                }

                                @if (imageUrls != null && imageUrls.Length > 0)
                                {
                                    <div class="list-thumb">
                                        <div class="listing-thumbIn-slider position-relative navi_pagi_bottom_center slider-1-grid owl-carousel owl-theme">
                                            @foreach (var image in imageUrls)
                                            {
                                                <div class="item">
                                                    <img class="w-100" src="@image" alt="@related.Title" />
                                                    <a href="@Url.Action("OfferDetails", "UserOfferDetails", new { offerId = related.OfferId })" class="listing-fav fz12">
                                                        <span class="far fa-heart"></span>
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    // Fallback to default images when no valid images are found
                                    var relateddefaultImages = new List<string>
                        {
                        Url.Content("~/template_assets/images/listings/No_Offer_img_1.jpg"),
                        Url.Content("~/template_assets/images/listings/No_Offer_img_2.jpg")
                        };

                                    int index = related.OfferId % relateddefaultImages.Count;
                                    var selectedImage = relateddefaultImages[index];

                                    <div class="list-thumb">
                                        <img class="w-100" src="@selectedImage" alt="@related.Title" />
                                        <a href="@Url.Action("OfferDetails", "UserOfferDetails", new { offerId = related.OfferId })" class="listing-fav fz12">
                                            <span class="far fa-heart"></span>
                                        </a>
                                    </div>
                                }

                            </div>
                            <div class="list-content">
                                <p class="list-text body-color fz14 mb-1">@related.Category</p>
                                <h5 class="list-title line-clamp2"><a href="@Url.Action("OfferDetails", "UserOfferDetails", new { offerId = related.OfferId })">@related.Title</a></h5>
                                <div class="review-meta d-flex align-items-center">
                                    <i class="fas fa-star fz10 review-color me-2"></i>
                                    <p class="mb-0 body-color fz14"><span class="dark-color me-2">@averageRating.ToString("0.00") </span>@totalReviews reviews</p>
                                </div>
                                <hr class="my-2">
                                @if (related.User != null)
                                {
                                    <div class="list-meta d-flex justify-content-between align-items-center mt15">
                                        <a href="@Url.Action("PublicProfileByUsername", "UserProfile", new { username = related.User.UserName })">
                                            <span class="position-relative mr10">
                                                <img class="rounded-circle" src="@(string.IsNullOrEmpty(related.User.ProfileImageUrl) ? "/template_assets/images/No_Profile_img.png" : related.User.ProfileImageUrl)" alt="Freelancer Photo" width="25">
                                                <span class="online-badge"></span>
                                            </span>
                                            <span class="fz14">@related.User?.UserName</span>
                                        </a>
                                        <div class="budget">
                                            <p class="mb-0 body-color">Location<span class="fz17 fw500 dark-color ms-1">@related.User?.Country</span></p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}

@section ProfileScript {
    <script>
        $(document).ready(function () {
            var sync1 = $("#sync1");
            var sync2 = $("#sync2");
            var slidesPerPage = 4; // Number of thumbnails per page
            var syncedSecondary = true;

            // Main carousel (big images)
            sync1.owlCarousel({
                items: 1,
                slideSpeed: 2000,
                nav: true,
                autoplay: false,
                dots: false,
                loop: true,
                responsiveRefreshRate: 200,
                navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>']
            }).on('changed.owl.carousel', syncPosition);

            // Thumbnail carousel
            sync2.owlCarousel({
                items: slidesPerPage,
                dots: false,
                nav: false,
                smartSpeed: 200,
                slideSpeed: 500,
                slideBy: slidesPerPage, // When clicking a thumbnail, how many slides to move
                responsiveRefreshRate: 100,
                responsive: {
                    0: { items: 2 },
                    600: { items: 3 },
                    1000: { items: slidesPerPage }
                }
            }).on('changed.owl.carousel', syncPosition2);

            // On click thumbnail, trigger main carousel change
            sync2.on("click", ".owl-item", function (e) {
                e.preventDefault();
                var index = $(this).index();
                sync1.trigger('to.owl.carousel', [index, 300, true]);
            });

            function syncPosition(el) {
                // Get current index of main carousel
                var count = el.item.count - 1;
                var current = Math.round(el.item.index - (el.item.count / 2) - .5);
                if (current < 0) {
                    current = count;
                }
                if (current > count) {
                    current = 0;
                }

                // Remove .current class from all thumbnails and add to the current one
                sync2.find(".owl-item").removeClass("current").eq(current).addClass("current");

                // If the thumbnail slider is not on the same page as the current slide, move it.
                var onscreen = sync2.find('.owl-item.active').length - 1;
                var start = sync2.find('.owl-item.active').first().index();
                var end = sync2.find('.owl-item.active').last().index();

                if (current > end) {
                    sync2.trigger('to.owl.carousel', [current, 100, true]);
                }
                if (current < start) {
                    sync2.trigger('to.owl.carousel', [current - onscreen, 100, true]);
                }
            }

            function syncPosition2(el) {
                if (syncedSecondary) {
                    var number = el.item.index;
                    sync1.trigger('to.owl.carousel', [number, 100, true]);
                }
            }
        });
    </script>
    <script>
        (function () {
            const stars = document.querySelectorAll('.star-rating svg');
            const ratingInput = document.getElementById('Rating');
            stars.forEach(star => {
                star.addEventListener('click', function () {
                    const selectedValue = parseInt(this.getAttribute('data-value'));
                    ratingInput.value = selectedValue;
                    stars.forEach((s, index) => {
                        if (index < selectedValue) {
                            s.classList.add('selected');
                            s.style.fill = 'gold'; // Visual style for selected stars
                        } else {
                            s.classList.remove('selected');
                            s.style.fill = '#cccccc';
                        }
                    });
                });
            });
        })();
    </script>
    <script>
        $(document).ready(function () {
            $("#see-more-btn").click(function () {
                var hiddenReviews = $("#reviews-container .review-item").filter(function () {
                    return $(this).css("display") === "none";
                });
                if (hiddenReviews.length > 0) {
                    // If there are hidden reviews, show all reviews and change button text to "See Less"
                    $("#reviews-container .review-item").show();
                    $(this).html('See Less <i class="fal fa-arrow-right-long"></i>');
                } else {
                    // Otherwise, hide reviews beyond the first two and change button text back to "See More"
                    $("#reviews-container .review-item").each(function (index) {
                        if (index >= 2) {
                            $(this).hide();
                        }
                    });
                    $(this).html('See More <i class="fal fa-arrow-right-long"></i>');
                    // Optionally, scroll to the reviews container
                    $('html, body').animate({ scrollTop: $("#reviews-container").offset().top }, 500);
                }
            });
        });
    </script>
    <script>
        // When the share button is clicked, display the share overlay with the current URL.
        document.getElementById("shareBtn").addEventListener("click", function () {
            var shareInput = document.getElementById("shareLink");
            // Set the share link to the current page URL.
            shareInput.value = window.location.href;
            document.getElementById("shareOverlay").style.display = "flex";
        });

        // Close the share overlay when the close button is clicked.
        document.getElementById("closeShare").addEventListener("click", function () {
            document.getElementById("shareOverlay").style.display = "none";
        });

        // Copy functionality for the share link.
        document.getElementById("copyShare").addEventListener("click", function () {
            var input = document.getElementById("shareLink");
            input.select();
            try {
                var successful = document.execCommand("copy");
                if (successful) {
                    var btn = this;
                    var originalText = btn.innerText;
                    btn.innerText = "Copied";
                    setTimeout(function () {
                        btn.innerText = originalText;
                    }, 3000);
                }
            } catch (e) {
                console.error("Copy command failed", e);
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.review_cansel_btns a.vote').click(function (e) {
                e.preventDefault();

                var $btn = $(this);
                var vote = $btn.data('vote'); // "helpful" or "not_helpful"
                var $reviewContainer = $btn.closest('.review-item');
                var reviewId = $reviewContainer.data('review-id');

                // Optionally disable the buttons
                $reviewContainer.find('a.vote').prop('disabled', true);

                $.ajax({
                    url: '/ExchangeReview/Vote', // Use the correct path.
                    type: 'POST',
                    data: { reviewId: reviewId, vote: vote },
                    headers: {
                        "RequestVerificationToken": $("input[name='__RequestVerificationToken']").val()
                    },
                    success: function (response) {
                        if (!response.success) {
                            alert(response.message);
                            // Re-enable buttons if vote not processed.
                            $reviewContainer.find('a.vote').prop('disabled', false);
                            return;
                        }
                        // Update vote counts in the UI.
                        $reviewContainer.find('.helpful-count span').text(response.helpfulCount);
                        $reviewContainer.find('.not-helpful-count span').text(response.notHelpfulCount);

                        // Compare counts to apply color.
                        if (response.helpfulCount > response.notHelpfulCount) {
                            $reviewContainer.find("a.vote[data-vote='helpful']").css("color", "green");
                            $reviewContainer.find("a.vote[data-vote='not_helpful']").css("color", "#333");
                        } else if (response.notHelpfulCount > response.helpfulCount) {
                            $reviewContainer.find("a.vote[data-vote='not_helpful']").css("color", "red");
                            $reviewContainer.find("a.vote[data-vote='helpful']").css("color", "#333");
                        } else {
                            $reviewContainer.find("a.vote").css("color", "#333");
                        }
                        alert("Your vote has been recorded!");
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                        $reviewContainer.find('a.vote').prop('disabled', false);
                    }
                });
            });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}
