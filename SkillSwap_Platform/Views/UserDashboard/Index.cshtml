@model SkillSwap_Platform.Models.ViewModels.DashboardVM
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Dashboard";
    ViewData["SubTitle"] = "Collaborate, learn, and grow together.";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="col-lg-9">
    <div class="dashboard_title_area">
        <h2>@ViewData["Title"]</h2>
        <p class="text">@ViewData["SubTitle"]</p>
    </div>
</div>
</div>
<div class="row">
    <div class="col-sm-6 col-xxl-3">
        <div class="d-flex align-items-center justify-content-between statistics_funfact">
            <div class="details">
                <div class="fz15">Swaps Offered</div>
                <div class="title">@Model.ServicesOffered</div>
                <div class="text fz14"><span class="text-thm">@Model.NewServicesOffered</span> New Offered</div>
            </div>
            <div class="icon text-center"><i class="flaticon-contract"></i></div>
        </div>
    </div>
    <div class="col-sm-6 col-xxl-3">
        <div class="d-flex align-items-center justify-content-between statistics_funfact">
            <div class="details">
                <div class="fz15">Completed Swaps</div>
                <div class="title">@Model.CompletedServices</div>
                <div class="text fz14"><span class="text-thm">@Model.NewServicesCompleted@("+")</span> New Completed</div>
            </div>
            <div class="icon text-center"><i class="flaticon-success"></i></div>
        </div>
    </div>
    <div class="col-sm-6 col-xxl-3">
        <div class="d-flex align-items-center justify-content-between statistics_funfact">
            <div class="details">
                <div class="fz15">On Going Swaps</div>
                <div class="title">@Model.InQueueServices</div>
                <div class="text fz14"><span class="text-thm">@Model.NewInQueue@("+")</span> New Queue</div>
            </div>
            <div class="icon text-center"><i class="flaticon-review"></i></div>
        </div>
    </div>
    <div class="col-sm-6 col-xxl-3">
        <div class="d-flex align-items-center justify-content-between statistics_funfact">
            <div class="details">
                <div class="fz15">Total Review</div>
                <div class="title">@Model.TotalReviews</div>
                <div class="text fz14"><span class="text-thm">@Model.NewReviews@("+")</span> New Review</div>
            </div>
            <div class="icon text-center"><i class="flaticon-review-1"></i></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-8">
        <div class="ps-widget bgc-white bdrs4 p30 mb30 overflow-hidden position-relative">
            <div class="navtab-style1">
                <div class="d-sm-flex align-items-center justify-content-between">
                    <h4 class="title fz17 mb20">Swaps Views</h4>
                    @* <div class="page_control_shorting dark-color pr10 text-center text-md-end">
                        <select class="selectpicker show-tick">
                            <option>This Week</option>
                            <option>This Month</option>
                            <option>This Year</option>
                        </select>
                    </div> *@
                </div>
                <canvas id="profileViewsChart" style="height:230px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <div class="ps-widget bgc-white bdrs4 p30 mb30 overflow-hidden position-relative">
            <div class="bdrb1 pb15 mb50">
                <h5 class="title">Traffic</h5>
            </div>
            <canvas id="trafficChart" height="260px"></canvas>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6 col-xxl-4">
        <div class="ps-widget bgc-white bdrs4 p30 mb30 overflow-hidden position-relative">
            <div class="d-flex justify-content-between bdrb1 pb15 mb20">
                <h5 class="title">Most Viewed Swaps</h5>
                <a class="text-decoration-underline text-thm6" href="@Url.Action("OfferList","UserOfferManage")">View All</a>
            </div>
            <div class="dashboard-img-service">
                @foreach (var svc in Model.MostViewedServices)
                {
                    <div class="listing-style1 list-style d-block d-xl-flex align-items-center border-0 mb10">
                        <div class="list-thumb flex-shrink-0 bdrs4">
                            @{
                                // 1) Try to parse the stored JSON
                                List<string> portfolioImages = new();
                                if (!string.IsNullOrWhiteSpace(svc.PortfolioJson))
                                {
                                    try
                                    {
                                        portfolioImages = Newtonsoft.Json.JsonConvert
                                        .DeserializeObject<List<string>>(svc.PortfolioJson)
                                        ?? new List<string>();
                                    }
                                    catch
                                    {
                                        // ignore parse errors
                                    }
                                }

                                // 2) Your two “no-offer” defaults
                                var defaultImages = new[]
                                {
                        Url.Content("~/template_assets/images/listings/No_Offer_img_1.jpg"),
                        Url.Content("~/template_assets/images/listings/No_Offer_img_2.jpg")
                        };

                                // 3) Deterministic index from OfferId
                                var defaultIndex = svc.OfferId % defaultImages.Length;
                                var fallbackUrl = defaultImages[defaultIndex];

                                // 4) Final image choice
                                var imgUrl = portfolioImages.Any()
                                ? portfolioImages.First()
                                : fallbackUrl;
                            }
                            <img class="w-100" src="@imgUrl" alt="@svc.Title">
                        </div>
                        <div class="list-content flex-grow-1 pt10 pb10 pl15 pl0-lg">
                            <h6 class="list-title line-clamp2 mb-2"><a href="@svc.DetailsUrl">@svc.Title</a></h6>
                            <div class="list-meta d-flex justify-content-between align-items-center">
                                <div class="review-meta d-flex align-items-center">
                                    <i class="fas fa-star fz10 review-color me-2"></i>
                                    <p class="mb-0 body-color fz14"><span class="dark-color me-2">@svc.Rating</span></p>
                                </div>
                                <div class="budget">
                                    <p class="mb-0 body-color">Location<span class="fz17 fw500 dark-color ms-1">@svc.Location</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr class="opacity-100 mt-0">
                }
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xxl-4">
        <div class="ps-widget bgc-white bdrs4 p30 mb30 overflow-hidden position-relative">
            <div class="d-flex justify-content-between bdrb1 pb15 mb30">
                <h5 class="title">Your Recent Exchanges</h5>
                <a class="text-decoration-underline text-thm6" href="@Url.Action("Index","ExchangeDashboard")">View All</a>
            </div>
            <div class="dashboard-img-service">
                @foreach (var pur in Model.RecentPurchases)
                {
                    <div class="listing-style1 list-style d-block d-xl-flex align-items-start border-0 mb10">
                        <div class="list-thumb wa flex-shrink-0 bdrs4 mb15-lg">
                            <img class="wa img-2" src="@pur.BuyerAvatarUrl" style="width:48px; height:48px; border-radius:50%;" alt="">
                        </div>
                        <div class="list-content flex-grow-1 py-0 pb10 pl15 pl0-lg">
                            <h6 class="list-title mb-2">@pur.BuyerName. <span class="text-thm">has accepted the swap for, </span> @pur.ServiceTitle</h6>
                            <div class="list-meta d-flex justify-content-between align-items-center">
                                <div class="review-meta d-flex align-items-center" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Exchange Date">
                                    <p class="mb-0 body-color fz14">@pur.InitiatedDate.ToString("MMM d, yyyy")</p>
                                </div>
                                <div class="budget">
                                    <p class="mb-0" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Token Cost"><span class="icon flaticon-income fz15 fw500 dark-color">&nbsp;@pur.Amount</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr class="opacity-100 mt-0">
                }
            </div>
        </div>
    </div>
    <div class="col-md-6 col-xxl-4">
        <div class="ps-widget bgc-white bdrs4 p30 mb30 overflow-hidden position-relative">
            <div class="bdrb1 pb15 mb30">
                <h5 class="title">Recent Activity</h5>
            </div>
            @if (Model.RecentActivity?.Any() == true)
            {
                @foreach (var item in Model.RecentActivity)
                {
                    // Add bottom padding on all but the last item
                    var isLast = item == Model.RecentActivity.Last();
                    <div class="dashboard-timeline-label">
                        <div class="timeline-item @(isLast ? "" : "pb15")">
                            <!--begin::Label-->
                            <div class="child-timeline-label">@item.Timestamp.ToString("hh:mm tt")</div>
                            <!--end::Label-->
                            <!--begin::Badge-->
                            <div class="timeline-badge d-flex align-items-center @item.BadgeColorClass">
                                <i class="fas fa-genderless"></i>
                            </div>
                            <!--end::Badge-->
                            <!--begin::Text-->
                            <div class="ra_pcontent pl10"><span class="title">@item.Title</span> <br> <span class="subtitle">@item.Subtitle</span></div>
                            <!--end::Text-->
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No recent activity.</p>
            }
        </div>
    </div>
</div>

@section DynamicScript {
    <!-- Make sure you've referenced Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // — Bar chart: Your top 7 service views —
        (function(){
            const rawLabels = @Html.Raw(JsonConvert.SerializeObject(Model.OfferViewLabels));
            const labels = rawLabels.map(label =>
              label.length > 20
                ? label.slice(0, 20) + '…'
                : label
            );
          const data   = @Html.Raw(JsonConvert.SerializeObject(Model.OfferViewData));
          const ctx    = document.getElementById('profileViewsChart').getContext('2d');

          new Chart(ctx, {
            type: 'bar',
            data: {
              labels: labels,
              datasets: [{
                label: 'Views',
                data: data,
                backgroundColor: '#FBF8EF',  
                borderColor:    '#5BBB7B',
                borderWidth: 1.2,
                borderRadius: 4,
                barPercentage: 0.6
              }]
            },
            options: {
              scales: {
               x: {
                  ticks: {
                    autoSkip: false,
                    maxRotation: 0
                  }
                },
                y: { beginAtZero: true }
              },
              plugins: { legend:{ display:false } }
            }
          });
        })();

        // — Doughnut: Views by Category —
        (function(){
          const labels = @Html.Raw(JsonConvert.SerializeObject(Model.CategoryLabels));
          const data   = @Html.Raw(JsonConvert.SerializeObject(Model.CategoryData));
          const ctx    = document.getElementById('trafficChart').getContext('2d');

          new Chart(ctx, {
            type: 'doughnut',
            data: {
              labels: labels,
              datasets: [{
                data: data,
                cutout: '60%'
              }]
            },
            options: {
              plugins: { legend:{ position:'right' } }
            }
          });
        })();
    </script>
}
