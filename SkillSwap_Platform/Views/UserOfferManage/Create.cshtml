@model SkillSwap_Platform.Models.ViewModels.ExchangeVM.OfferCreateVM


@{
    ViewData["Title"] = "Create Swap Offer";
    ViewData["SubTitle"] = "Grow your reach by showcasing what you do best.";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<style>
    /* Container that forces a single row */
    #imagePreview {
        white-space: nowrap;
        overflow-x: auto;
        padding: 5px;
        margin-bottom: 15px;
    }

        #imagePreview img {
            display: inline-block;
            width: 250px;
            height: 200px;
            object-fit: cover;
            margin-right: 10px;
            cursor: move;
        }

</style>

<div class="col-lg-9">
    <div class="dashboard_title_area">
        <h2>@ViewData["Title"]</h2>
        <p class="text">@ViewData["SubTitle"]</p>
    </div>
</div>
<div class="col-lg-3">
    <div class="text-lg-end">
        <a href="" class="ud-btn btn-dark">Save & Publish<i class="fal fa-arrow-right-long"></i></a>
    </div>
</div>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <div class="col-lg-12">
        <div class="ui-content">
            <div class="message-alart-style1">
                <div class="alert alart_style_four alert-dismissible fade show mb20" role="alert">
                    @TempData["SuccessMessage"]
                    <i class="far fa-xmark btn-close" data-bs-dismiss="alert" aria-label="Close"></i>
                </div>
            </div>
        </div>
    </div>
}
@if (ViewBag.ErrorMessage != null)
{
    <div class="col-lg-12">
        <div class="ui-content">
            <div class="message-alart-style1">
                <div class="alert alart_style_three alert-dismissible fade show mb20" role="alert">
                    @ViewBag.ErrorMessage
                    <i class="far fa-xmark btn-close" data-bs-dismiss="alert" aria-label="Close"></i>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-xl-12">
        @using (Html.BeginForm("Create", "UserOfferManage", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <input asp-for="Latitude" type="hidden" />
            <input asp-for="Longitude" type="hidden" />
            <div class="ps-widget bgc-white bdrs4 p30 mb30 overflow-hidden position-relative">
                <div class="bdrb1 pb15 mb25">
                    <h5 class="list-title">Basic Information</h5>
                </div>
                <div class="col-xl-8">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="mb20">
                                <label asp-for="Title" class="heading-color ff-heading fw500 mb10">Swap Title <span class="text-danger">*</span></label>
                                <input asp-for="Title" type="text" class="form-control" placeholder="i will">
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="TokenCost" class="heading-color ff-heading fw500 mb10"> Token Cost</label>
                                <div class="input-group">
                                    <input asp-for="TokenCost" type="text" class="form-control" placeholder="Enter commitment">
                                    <span class="input-group-text">.00</span>
                                </div>
                                <span asp-validation-for="TokenCost" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="TimeCommitmentDays" class="heading-color ff-heading fw500 mb10">Time Commitment (Days) <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <input asp-for="TimeCommitmentDays" type="text" class="form-control" placeholder="Enter commitment">
                                    <span class="input-group-text">days</span>
                                </div>
                                <span asp-validation-for="TimeCommitmentDays" class="text-danger"></span>
                                <span id="timeCommitmentError" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="FreelanceType" class="heading-color ff-heading fw500 mb10">Availability <span class="text-danger">*</span></label>
                                <div class="bootselect-multiselect">
                                    <select asp-for="FreelanceType" asp-items="Model.FreelanceTypeOptions" class="selectpicker">
                                        <option value="">Select Availability Type</option>
                                    </select>
                                    <span asp-validation-for="FreelanceType" class="text-danger"></span>
                                    <span class="text-danger" data-valmsg-for="FreelanceType" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="CollaborationMethod" class="heading-color ff-heading fw500 mb10">Collaboration Type <span class="text-danger">*</span></label>
                                <div class="bootselect-multiselect">
                                    <select asp-for="CollaborationMethod" asp-items="Model.CollaborationOptions" class="selectpicker">
                                        <option value="">Select</option>
                                    </select>
                                    <span asp-validation-for="CollaborationMethod" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="AssistanceRounds" class="heading-color ff-heading fw500 mb10">Assistance Rounds <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <input asp-for="AssistanceRounds" type="number" class="form-control" placeholder="Enter Assistance Rounds" min="0">
                                </div>
                                <span asp-validation-for="AssistanceRounds" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="RequiredSkillLevel" class="heading-color ff-heading fw500 mb10">Partner's Skill Level <span class="text-danger">*</span></label>
                                <div class="bootselect-multiselect">
                                    <select asp-for="RequiredSkillLevel" asp-items="Model.RequiredSkillLevelOptions" class="selectpicker">
                                        <option value="">Select Required Skill Level</option>
                                    </select>
                                    <span asp-validation-for="RequiredSkillLevel" class="text-danger"></span>
                                    <span class="text-danger" data-valmsg-for="RequiredSkillLevel" data-valmsg-replace="true"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <div class="form-style1">
                                    <label asp-for="SelectedSkillIds" name="SelectedSkillIds" class="heading-color ff-heading fw500 mb10">
                                        Offered Skill
                                        <span class="text-danger">*</span>
                                    </label>
                                    <div class="bootselect-multiselect">
                                        <select id="SelectedSkillIds" name="SelectedSkillIds" data-live-search="true" class="selectpicker" multiple>
                                            @foreach (var skill in Model.UserSkills)
                                            {
                                                <option value="@skill.Value">@skill.Text</option>
                                            }
                                        </select>
                                        <span asp-validation-for="SelectedSkillIds" class="text-danger"></span>
                                        <span class="text-danger" data-valmsg-for="SelectedSkillIds" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="Category" class="heading-color ff-heading fw500 mb10">Swap Category <span class="text-danger">*</span></label>
                                <div class="bootselect-multiselect">
                                    <select asp-for="Category" asp-items="Model.CategoryOptions" data-live-search="true" class="selectpicker">
                                        <option value="">Select Category</option>
                                    </select>
                                    <span class="text-danger" data-valmsg-for="Category" data-valmsg-replace="true"></span>
                                    <span asp-validation-for="Category" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="SelectedDevices" class="heading-color ff-heading fw500 mb10">Devices <span class="text-danger">*</span></label>
                                <div class="bootselect-multiselect">
                                    <select asp-for="SelectedDevices" asp-items="Model.DeviceOptions" multiple class="selectpicker">
                                    </select>
                                    <span asp-validation-for="SelectedDevices" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="Tools" class="heading-color ff-heading fw500 mb10">Tools <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <input asp-for="Tools" type="text" class="form-control" placeholder="e.g. Apache, Paint">
                                </div>
                                <small>*If no tool required then just type <i>' Not Required '</i></small>
                                <span asp-validation-for="Tools" class="text-danger"></span>
                                <span id="Tools" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="mb20">
                                <label asp-for="SelectedWillingSkill" class="heading-color ff-heading fw500 mb10">Willing Skkill <span class="text-danger">*</span></label>
                                <div class="bootselect-multiselect">
                                    <select asp-for="SelectedWillingSkill" asp-items="Model.WillingSkillOptions" class="selectpicker">
                                        <option value="">-- Select a Willing Skill --</option>
                                    </select>
                                    <span asp-validation-for="SelectedWillingSkill" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6" id="manualAddress">
                            <div class="mb20">
                                <label asp-for="Address">
                                    Create Location <span class="text-danger">*</span>
                                    <i class="fas fa-question-circle text-muted ms-1"
                                       data-bs-toggle="tooltip"
                                       data-bs-html="true"
                                       title="This helps identify where the offer was created. You can also enter it manually if you’re traveling or other reason, so others can find nearby swaps.">
                                    </i>
                                </label>
                                <div class="input-group">
                                    <input asp-for="Address"
                                           class="form-control"
                                           placeholder="123 Main St, City…"
                                           autocomplete="off" />

                                    <button type="button"
                                            id="btnFetchLocation"
                                            class="btn btn-outline-secondary"
                                            data-bs-toggle="tooltip" data-bs-placement="right"
                                            title="Use my current location">
                                        <i class="fas fa-location-arrow"></i>
                                    </button>
                                </div>
                                <small class="form-text text-muted">
                                    This will be used when showing <i>' nearby '</i> offers.
                                </small>
                                <div id="addressError" class="mt-1 text-danger"></div>
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb10">
                                <label asp-for="ScopeOfWork" class="heading-color ff-heading fw500 mb10">Scope Of Work <span class="text-danger">*</span></label>
                                <textarea asp-for="ScopeOfWork" cols="30" rows="6" placeholder="Describe what is included in this swap"></textarea>
                                <span asp-validation-for="ScopeOfWork" class="text-danger"></span>
                            </div>
                        </div>
                        @* <div class="col-md-12">
                            <div class="text-start">
                                <button type="submit" class="ud-btn btn-thm">Save<i class="fal fa-arrow-right-long"></i></button>
                            </div>
                        </div> *@
                    </div>
                </div>
            </div>

            <!-- FAQ Section -->
            <div class="ps-widget bgc-white bdrs12 p30 mb30">
                <h5 class="list-title mb20">Frequently Asked Questions</h5>

                <div id="faq-items">
                    @* the first item (index 0) *@
                    <div class="faq-item" data-index="0">
                        <div class="mb40">
                            <label>🔥 Ask a Thought-Provoking Question <span class="text-danger">*</span></label>
                            <input name="Faqs[0].Question" class="form-control faq-question" placeholder="e.g. What makes this offer stand out from the rest?" />
                        </div>
                        <div class="mb-2">
                            <label>💡 Provide a Clear, Concise Answer <span class="text-danger">*</span></label>
                            <textarea name="Faqs[0].Answer" class="faq-answer" rows="3" placeholder="e.g. This offer includes a personalized 1-on-1 session, downloadable resources, and a 24-hour turnaround."></textarea>
                        </div>
                        <div class="faq-error text-danger small mb20"></div>
                        <button type="button" class="ud-btn btn-light-thm mb25 me-4 remove-faq" style="border:0;">Remove</button>
                        <hr />
                    </div>
                </div>

                <button type="button" id="add-faq" class="ud-btn btn-thm mb25">
                    <i class="fas fa-plus me-1" style="transform:rotate(0deg)"></i> Add FAQ
                </button>

                <hr class="opacity-100 mb60">
                <h4>Frequently Asked Questions</h4>

                <div class="accordion-style1 faq-page mb-4 mb-lg-5 mt30">
                    <div class="accordion" id="faqPreviewAccordion">
                    </div>
                </div>
            </div>
            <div class="ps-widget bgc-white bdrs12 p30 mb30 overflow-hidden position-relative">
                <div class="bdrb1 pb15 mb25">
                    <h5 class="list-title">Upload Attachments</h5>
                </div>
                <div class="row">
                    <div class="col-12 col-xl-12">
                        <div id="imagePreview" class="image-preview-container"></div>
                    </div>

                    <div class="col-6 col-xl-3">
                        <input type="file" id="uploadImages" name="PortfolioFiles" class="upload-img" accept=".jpg,.jpeg,.png" multiple />
                    </div>
                </div>
                <span id="uploadError" class="text-danger"></span>
                <p class="text">
                    Max file size is 1MB, Suitable dimension: 329x245 And Suitable files are .jpg & .png
                </p>
                <div class="text-start">
                    @* <a class="ud-btn btn-thm" href="page-contact.html">Save & Publish<i class="fal fa-arrow-right-long"></i></a> *@
                    <button type="submit" class="ud-btn btn-thm">Save & Publish<i class="fal fa-arrow-right-long"></i></button>
                </div>
            </div>
        }
    </div>
</div>

<style>
    #addressError {
        font-size: 0.875rem;
        color: #dc3545; /* bootstrap danger red */
    }
</style>

@section DynamicScript {
    <script>
        $(document).ready(function () {
            var dt = new DataTransfer();
            var maxFiles = 5;
            var maxFileSize = 1 * 1024 * 1024; // 1 MB in bytes
            var recommendedWidth = 329;
            var recommendedHeight = 245;

            $("#uploadImages").on("change", function () {
                var files = this.files;
                var errorContainer = $("#uploadError");
                errorContainer.html("");
                var errorMessages = [];
                var filesProcessed = 0;

                // Check if adding these files would exceed the maximum allowed.
                if (dt.files.length + files.length > maxFiles) {
                    errorMessages.push(`You can only add ${maxFiles - dt.files.length} more image(s).`);
                    this.value = "";
                    errorContainer.html(errorMessages.join("<br/>"));
                    return;
                }

                $.each(files, function (index, file) {
                    // Validate file type.
                    if (!file.type.match("image/jpeg") && !file.type.match("image/png")) {
                        errorMessages.push(`"${file.name}": Only JPG, JPEG, and PNG images are allowed.`);
                        filesProcessed++;
                        if (filesProcessed === files.length) {
                            $("#uploadImages")[0].files = dt.files;
                            renderPreviews();
                            toggleUploadButton();
                            if (errorMessages.length > 0) {
                                errorContainer.html(errorMessages.join("<br/>"));
                            }
                        }
                        return true; // Skip to next file.
                    }

                    // Validate file size (5 MB maximum per image).
                    if (file.size > maxFileSize) {
                        errorMessages.push(`"${file.name}": Maximum file size per image is 1 MB.`);
                        filesProcessed++;
                        if (filesProcessed === files.length) {
                            $("#uploadImages")[0].files = dt.files;
                            renderPreviews();
                            toggleUploadButton();
                            if (errorMessages.length > 0) {
                                errorContainer.html(errorMessages.join("<br/>"));
                            }
                        }
                        return true;
                    }

                    // Validate image dimensions asynchronously.
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var img = new Image();
                        img.onload = function () {
                            if (img.naturalWidth !== recommendedWidth || img.naturalHeight !== recommendedHeight) {
                                errorMessages.push(`"${file.name}": Image dimensions must be exactly ${recommendedWidth} x ${recommendedHeight} pixels.`);
                            } else {
                                dt.items.add(file);
                            }
                            filesProcessed++;
                            if (filesProcessed === files.length) {
                                $("#uploadImages")[0].files = dt.files;
                                renderPreviews();
                                toggleUploadButton();
                                if (errorMessages.length > 0) {
                                    errorContainer.html(errorMessages.join("<br/>"));
                                }
                            }
                        };
                        img.onerror = function () {
                            errorMessages.push(`"${file.name}": Unable to read image dimensions.`);
                            filesProcessed++;
                            if (filesProcessed === files.length) {
                                $("#uploadImages")[0].files = dt.files;
                                renderPreviews();
                                toggleUploadButton();
                                if (errorMessages.length > 0) {
                                    errorContainer.html(errorMessages.join("<br/>"));
                                }
                            }
                        };
                        img.src = e.target.result;
                    };
                    reader.onerror = function () {
                        errorMessages.push(`"${file.name}": Error reading file.`);
                        filesProcessed++;
                        if (filesProcessed === files.length) {
                            $("#uploadImages")[0].files = dt.files;
                            renderPreviews();
                            toggleUploadButton();
                            if (errorMessages.length > 0) {
                                errorContainer.html(errorMessages.join("<br/>"));
                            }
                        }
                    };
                    reader.readAsDataURL(file);
                });
            });

            function renderPreviews() {
                $("#imagePreview").empty();
                $.each(dt.files, function (index, file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var img = $("<img />", {
                            src: e.target.result,
                            alt: file.name,
                            "data-index": index
                        });
                        $("#imagePreview").append(img);
                    };
                    reader.readAsDataURL(file);
                });
            }

            $("#imagePreview").sortable({
                update: reorderFiles
            });

            function reorderFiles() {
                var reorderedDt = new DataTransfer();
                $("#imagePreview img").each(function () {
                    reorderedDt.items.add(dt.files[$(this).data("index")]);
                });
                dt = reorderedDt;
                $("#uploadImages")[0].files = dt.files;
                updatePreviewDataIndices();
            }

            function updatePreviewDataIndices() {
                $("#imagePreview img").each(function (i) {
                    $(this).attr("data-index", i);
                });
            }

            $("#imagePreview").on("dblclick", "img", function () {
                dt.items.remove($(this).index());
                $(this).remove();
                $("#uploadImages")[0].files = dt.files;
                toggleUploadButton();
                updatePreviewDataIndices();
            });

            function toggleUploadButton() {
                if (dt.files.length >= maxFiles) {
                    $("#uploadImages").prop("disabled", true);
                    $("#uploadError").html("You have reached the maximum limit of 5 images.");
                } else {
                    $("#uploadImages").prop("disabled", false);
                }
            }

            $("form").on("submit", function () {
                $("#uploadImages")[0].files = dt.files;
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
          const btn        = document.getElementById("btnFetchLocation");
          const addrInput  = document.querySelector('[name="Address"]');
          const latField   = document.querySelector('[name="Latitude"]');
          const lngField   = document.querySelector('[name="Longitude"]');
          const icon       = btn.querySelector("i");
          const errorDiv   = document.getElementById("addressError");

          btn.addEventListener("click", () => {
            // clear any previous error
            errorDiv.textContent = "";

            if (!navigator.geolocation) {
              errorDiv.textContent = "Geolocation isn’t supported by your browser.";
              return;
            }

            // show spinner & disable button
            btn.disabled = true;
            icon.classList.add("fa-spin");

            navigator.geolocation.getCurrentPosition(
            async pos => {
              const { latitude, longitude } = pos.coords;
              latField.value = latitude;
              lngField.value = longitude;

              // 1️⃣ fetch plain text address
              try {
                const resp = await fetch(
                  `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`
                );
                const data = await resp.json();
                addrInput.value = data.display_name || `${latitude.toFixed(5)}, ${longitude.toFixed(5)}`;
              } catch (e) {
                // fallback to coords if reverse-geocode fails
                addrInput.value = `${latitude.toFixed(5)}, ${longitude.toFixed(5)}`;
                errorDiv.textContent = "Couldn’t look up your street address, saved coords instead.";
              }

              icon.classList.remove("fa-spin");
              btn.disabled = false;
            },
              err => {
                let msg;
                switch (err.code) {
                  case err.PERMISSION_DENIED:
                    msg = "Permission to access location was denied.";
                    break;
                  case err.POSITION_UNAVAILABLE:
                    msg = "Unable to determine your location.";
                    break;
                  case err.TIMEOUT:
                    msg = "Getting your location timed out.";
                    break;
                  default:
                    msg = "An unknown error occurred.";
                }
                // show inline error
                errorDiv.textContent = msg;
                icon.classList.remove("fa-spin");
                btn.disabled = false;
              },
              { timeout: 10000 }
            );
          });
        });
    </script>
    <script>
        $(function() {
          const maxFaqs = 5;
          let faqIndex = 1;  // next index

          function updatePreview() {
            const $acc = $("#faqPreviewAccordion").empty();
            $(".faq-item").each(function(i) {
              const q = $(this).find(".faq-question").val().trim();
              const a = $(this).find(".faq-answer").val().trim();
              if (!q && !a) return;

              const hid = `faqHeading${i}`, cid = `faqCollapse${i}`, first = i===0;
              $acc.append(`
                <div class="accordion-item">
                  <h2 class="accordion-header" id="${hid}">
                    <button class="accordion-button ${first?"":"collapsed"}"
                            type="button"
                            data-bs-toggle="collapse"
                            data-bs-target="#${cid}"
                            aria-expanded="${first}"
                            aria-controls="${cid}">
                      ${q}
                    </button>
                  </h2>
                  <div id="${cid}"
                       class="accordion-collapse collapse ${first?"show":""}"
                       aria-labelledby="${hid}"
                       data-bs-parent="#faqPreviewAccordion">
                    <div class="accordion-body">${a}</div>
                  </div>
                </div>`);
            });
          }

          function validateBlock($blk) {
            const q = $blk.find(".faq-question").val().trim(),
                  a = $blk.find(".faq-answer").val().trim(),
                  $err = $blk.find(".faq-error").empty();
            if (!q || !a) {
              $err.text("Both question and answer are required before adding a new FAQ.");
              return false;
            }
            return true;
          }

          $("#add-faq").click(() => {
            const count = $(".faq-item").length;
            const $last = $(".faq-item").last();

            // don't exceed max
            if (count >= maxFaqs) {
              alert(`You can only add up to ${maxFaqs} FAQs.`);
              return;
            }

            // validate last block
            if (!validateBlock($last)) return;

            // clear any leftover error
            $last.find(".faq-error").empty();

            // append new block
            const idx = faqIndex++;
            $("#faq-items").append(`
              <div class="faq-item" data-index="${idx}">
                <div class="mb40">
                  <label>🔥 Ask a Thought-Provoking Question <span class="text-danger">*</span></label>
                  <input name="Faqs[${idx}].Question" class="form-control faq-question" />
                </div>
                <div class="mb20">
                  <label>💡 Provide a Clear, Concise Answer <span class="text-danger">*</span></label>
                  <textarea name="Faqs[${idx}].Answer" class="faq-answer" rows="3"></textarea>
                </div>
                <div class="faq-error text-danger small mb20"></div>
                <button type="button" class="ud-btn btn-light-thm remove-faq" style="border:0;">Remove</button>
                <hr />
              </div>
            `);

            updatePreview();
          });

          $(document).on("click", ".remove-faq", function() {
            $(this).closest(".faq-item").remove();
            updatePreview();
          });

          $(document).on("input", ".faq-question, .faq-answer", function() {
            // clear error on input
            $(this).closest(".faq-item").find(".faq-error").empty();
            updatePreview();
          });

          // initial render
          updatePreview();
        });
    </script>
}
