@model SkillSwap_Platform.Models.ViewModels.ExchangeVM.ExchangeReviewVM

@{
    ViewData["Title"] = "Review Exchange";
    ViewData["SubTitle"] = "Please leave a review for your exchange.";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<style>
    /* Basic styling for a cleaner review UI */
    .review-container {
        background-color: #f9f9f9;
        padding: 1.5rem;
        border-radius: 4px;
    }

    .star-rating {
        display: inline-flex;
        gap: 0.5rem; /* space between stars */
        margin-top: 0.5rem;
        cursor: pointer;
    }

        .star-rating svg {
            width: 24px;
            height: 24px;
            fill: #cccccc; /* default star color */
            transition: fill 0.3s;
        }

            .star-rating svg:hover {
                fill: gold;
            }

            .star-rating svg.selected {
                fill: gold;
            }
</style>

<div class="col-lg-12">
    <div class="dashboard_title_area">
        <h2>@ViewData["Title"]</h2>
        <p class="text">@ViewData["SubTitle"]</p>
    </div>
</div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="col-lg-12">
        <div class="ui-content">
            <div class="message-alart-style1">
                <div class="alert alart_style_four alert-dismissible fade show mb20" role="alert">
                    @TempData["SuccessMessage"]
                    <i class="far fa-xmark btn-close" data-bs-dismiss="alert" aria-label="Close"></i>
                </div>
            </div>
        </div>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="col-lg-12">
        <div class="ui-content">
            <div class="message-alart-style1">
                <div class="alert alart_style_three alert-dismissible fade show mb20" role="alert">
                    @TempData["ErrorMessage"]
                    <i class="far fa-xmark btn-close" data-bs-dismiss="alert" aria-label="Close"></i>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        @using (Html.BeginForm("ReviewExchange", "ExchangeDashboard", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ExchangeId)
            @Html.HiddenFor(model => model.OfferTitle)
            <div class="bsp_reveiw_wrt">
                <h6 class="fz17">Add a Review</h6>
                <p class="text-danger"><i>Your email address will not be published. Required fields are marked *</i></p>
                <h6>Your rating of this exchange <span class="text-danger">*</span></h6>
                <div class="d-flex mb20">
                    <input type="hidden" id="Rating" name="Rating" value="@Model.Rating" />

                    <!-- SVG stars that set the rating when clicked -->
                    <div class="star-rating">
                        @* Repeat 5 stars *@
                        @for (int i = 1; i <= 5; i++)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24"
                                 data-value="@i"
                                 class="@(i <= Model.Rating ? "selected" : "")">
                                <path d="M12 .587l3.668 7.431 8.2 1.193-5.934 5.786
                                     1.404 8.186L12 18.896l-7.338 3.887
                                     1.404-8.186L.132 9.211l8.2-1.193z" />
                            </svg>
                        }
                    </div>
                    <br />
                    <span asp-validation-for="Rating" class="text-danger"></span>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-4">
                            <label asp-for="Comments" class="fw500 fz16 ff-heading dark-color mb-2">Comment <span class="text-danger">*</span></label>
                            <textarea asp-for="Comments" class="pt15" rows="6" placeholder="Share your thoughts about this exchange..."></textarea>
                            <span asp-validation-for="Comments" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb20">
                            <label asp-for="ReviewerName" class="fw500 ff-heading dark-color mb-2">Name <span class="text-danger">*</span></label>
                            <input asp-for="ReviewerName" type="text" class="form-control" placeholder="jhon doe">
                            <span asp-validation-for="ReviewerName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb20">
                            <label asp-for="ReviewerEmail" class="fw500 ff-heading dark-color mb-2">Email <span class="text-danger">*</span></label>
                            <input asp-for="ReviewerEmail" type="email" class="form-control" placeholder="creativejhondoe088">
                            <span asp-validation-for="ReviewerEmail" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group mt20 mb20">
                        <label class="fw500 ff-heading dark-color mb-2">Offer Title</label>
                        <input type="text" class="form-control" value="@Model.OfferTitle" readonly />
                    </div>
                    <div class="col-md-12">
                        <div class="checkbox-style1 d-block d-sm-flex align-items-center justify-content-between mb20">
                            <label class="custom_checkbox fz15 ff-heading">
                                Save my name and email in this browser for the next time I comment.
                                <input type="checkbox" asp-for="RememberMe">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <button type="submit" class="ud-btn btn-thm">Send<i class="fal fa-arrow-right-long"></i></button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section DynamicScript {
    <script>
        (function() {
            const stars = document.querySelectorAll('.star-rating svg');
            const ratingInput = document.getElementById('Rating');

            stars.forEach(star => {
                star.addEventListener('click', function() {
                    // Get the rating value from the data-value attribute
                    const selectedValue = parseInt(this.getAttribute('data-value'));

                    // Update hidden input field with the new rating
                    ratingInput.value = selectedValue;

                    // Update the visual 'selected' state on each star
                    stars.forEach((s, index) => {
                        // index is zero-based, selectedValue is 1-based
                        if (index < selectedValue) {
                            s.classList.add('selected');
                        } else {
                            s.classList.remove('selected');
                        }
                    });
                });
            });
        })();
    </script>
    <script>
        (function () {
            // Star rating client-side logic example (optional).
            const stars = document.querySelectorAll('.star-rating svg');
            const ratingInput = document.getElementById('Rating');

            if (stars && ratingInput) {
                stars.forEach(star => {
                    star.addEventListener('click', function () {
                        const selectedValue = parseInt(this.getAttribute('data-value'));
                        ratingInput.value = selectedValue;
                        stars.forEach((s, index) => {
                            if (index < selectedValue) {
                                s.classList.add('selected');
                            } else {
                                s.classList.remove('selected');
                            }
                        });
                    });
                });
            }
        })();
    </script>
}